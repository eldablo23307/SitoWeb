<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=, initial-scale=1.0">
    <title>Stock Follower</title>
    <link rel="stylesheet" href={{ url_for('static', filename='./CSS/style.css') }}>
</head>
<body>
    <header>
        <h1>WebChatSoftWare99</h1>
        <img src={{ url_for('static', filename="./img/logo.png") }} alt="logo">
    </header>
    <main>
        <article>
            <section id="Titolo">
                <h2>News Pop-up</h2>
                <p>
                    Questo piccolo programma è stato il mio primo approccio all'utilizzo di API e lavorare <br>
                    con i file JSON. Il programma prende in input una parola chiave e cerca le ultime notizie su <br>
                    di esso per poi mandarle in output all'utente
                </p>
            </section>
            <br>
            <section id="Librerie">
                <p>
                    Come ogni buon codice Python iniziamo importando le libreire che ci servono che in questo <br>
                    caso sono: NewsApiClient, keyboard e pyautogui
                    <pre><code>from newsapi import NewsApiClient
import pyautogui
import keyboard                     
                    </code></pre>
                </p>
            </section>
            <br>
            <sectio id="Api_key">
                <p>
                    Dopo aver preso importato le librerie è il momento di accedere al API attraverso la nostra <br>
                    chiave cosi da conneterci ad esso.
                </p>
                <pre><code>newsapi = NewsApiClient(api_key="chiave_api")</code></pre>
            </section>
            <br>
            <section id="topic">
                <p>
                    Ora creiamo una funzione chiamata news, per poi dichiarare due variabili locali le quali topc <br>
                    per prendere l'argomento che si vuole avere la notizia e poi dichiariamo top_headlines che ci <br>
                    servira per prendere tutte le notizie più importanti su quel argomento nell'ultimo periodo
                </p>
                <pre><code>def news():
    topc = pyautogui.prompt("What news do you want?")
    top_headlines = newsapi.get_everything(q=topc, sources='bbc-news', language="en", sort_by="relevancy")
                </code></pre>
            </section>
            <br>
            <section id="prendere la notizia">
                <p>
                    Ora sempre all'interno della funzione precedentemente creata dichiariamo 4 variabili <br>
                    rispettivamente: autore, articolo, descrizione e fonte. Queste variabili prenderanno dal <br>
                    variabile top_headlines i valori corrispettivi visto che adesso top_headlines ha assunto <br>
                    come valore un JSON
                </p>
                <pre><code>def news():
    topc = pyautogui.prompt("What news do you want?")
    top_headlines = newsapi.get_everything(q=topc, sources='bbc-news', language="en", sort_by="relevancy")
                        
    autore = top_headlines["articles"][0]["author"]
    articolo = top_headlines["articles"][0]["title"]
    descrizione = top_headlines["articles"][0]["description"]
    fonte = top_headlines["articles"][0]["url"]
                </code></pre>
            </section>
            <br>
            <section id="output">
                <p>
                    Come ultimo passaggio della nostra funzione dobbiamo mandare in output i dati ottenuti <br>
                    e lo faremo tramite il metodo alert di pyautogui 
                </p>
                <pre><code>pyautogui.alert(f"Author: {autore} \nTitle: {articolo} \nDescription: {descrizione} \nURL: {fonte}")</code></pre>
            </section>
            <br>
            <section id="loop">
                <p>
                    Ora completata la nostra funzione possiamo creare un loop il quale se il pulsante f10 <br>
                    viene premuto il nostro programma eseguira la funzione, per precauzione implementiamo <br>
                    un try e except in caso di errore
                </p>
                <pre><code>while True:
    if keyboard.is_pressed("f10"):
        try:
            news()
        except:
            pyautogui.alert("An error occure in the process")
                </code></pre>
            </section>
            <br>
            <section id="StimeFinale">
                <p>
                    Questo semplice codice mi ha aiutato a capire come funzionano un minimo gli API e l'utilizzo <br>
                    dei dati di tipo JSON.
                </p>
            </section>
        </article>
    </main>


    <nav>
        <button onclick="window.location.href='/'">Home</button>
        <h2>Contact me</h2>
        <p>Email: <a href="mailto:webchatsoftware@gmail.com">webchatsoftware@gmail.com</a></p>
         <p><a href="https://it.fiverr.com/danymottu?public_mode=true">Fiverr</a></p>
    </nav>
</body>
</html>